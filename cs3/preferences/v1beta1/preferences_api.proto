// Copyright 2018-2019 CERN
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// In applying this license, CERN does not waive the privileges and immunities
// granted to it by virtue of its status as an Intergovernmental Organization
// or submit itself to any jurisdiction.

syntax = "proto3";

package cs3.preferences.v1beta1;

option csharp_namespace = "Cs3.Preferences.V1Beta1";
option go_package = "preferencesv1beta1";
option java_multiple_files = true;
option java_outer_classname = "PreferencesApiProto";
option java_package = "com.cs3.preferences.v1beta1";
option objc_class_prefix = "CPX";
option php_namespace = "Cs3\\Preferences\\V1Beta1";

import "cs3/preferences/v1beta1/resources.proto";
import "cs3/rpc/v1beta1/status.proto";

// Preferences API.
//
// The Preferences API is responsible for creating
// a key-value map according to user preferences.
//
// The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
// NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
// "OPTIONAL" in this document are to be interpreted as described in
// RFC 2119.
//
// The following are global requirements that apply to all methods:
// Any method MUST return CODE_OK on a succesful operation.
// Any method MAY return NOT_IMPLEMENTED.
// Any method MAY return INTERNAL.
// Any method MAY return UNKNOWN.
// Any method MAY return UNAUTHENTICATED.
service PreferencesAPI {
  // Maps the key-value pair.
  rpc SetKey(SetKeyRequest) returns (SetKeyResponse);
  // Returns the value associated with the
  // requested key.
  rpc GetKey(GetKeyRequest) returns (GetKeyResponse);
}

message SetKeyRequest {
  // REQUIRED.
  PreferenceKey key = 1;
  // REQUIRED.
  // The value associated with the key.
  string val = 2;
}

message SetKeyResponse {
  // REQUIRED.
  // The response status.
  cs3.rpc.v1beta1.Status status = 1;
}

message GetKeyRequest {
  // REQUIRED.
  PreferenceKey key = 1;
}

message GetKeyResponse {
  // REQUIRED.
  // The response status.
  cs3.rpc.v1beta1.Status status = 1;
  // REQUIRED.
  // The value associated with the key.
  string val = 2;
}
